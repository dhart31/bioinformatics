rule all:
    input:
        expand("picard/{sample}_duplicates_removed.bam", sample = ["SRR27135446"])

rule fastp:
    input:
        r1="raw_data/{sample}_1.fastq.gz",
        r2="raw_data/{sample}_2.fastq.gz"
    output:
        r1="fastp/{sample}_trimmed_R1.fastq.gz",
        r2="fastp/{sample}_trimmed_R2.fastq.gz"
    conda:
        "fastp"
    shell:
        """
        fastp -i {input.r1} -I {input.r2} -o {output.r1} -O {output.r2}
        """

rule bowtie2:
    input:
        r1 = "fastp/{sample}_trimmed_R1.fastq.gz",
        r2 = "fastp/{sample}_trimmed_R2.fastq.gz"
    output:
        bam = "bowtie2/{sample}.bam"
    conda:
        "bowtie2"
    params:
        ref = "~/references/AF266287"
    shell:
        """
        bowtie2 -x {params.ref} -1 {input.r1} -2 {input.r2} --sensitive-local | \
        samtools sort - > {output.bam}
        """

rule picard:
    input:
        bam = "bowtie2/{sample}.bam"
    output:
        bam = "picard/{sample}_duplicates_removed.bam",
        metrics = "picard/{sample}_picard.metrics"
    conda:
        "picard"
    shell:
        """
        picard MarkDuplicates \
        -I {input.bam} \
        -O {output.bam} \
        -M {output.metrics} \
        --REMOVE_DUPLICATES
        """